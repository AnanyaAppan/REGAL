select sum(ps_availqty),ps_supplycost 
from partsupp
where ps_availqty > 5000 and ps_supplycost < 700
group by ps_comment
;   

--------------------------------------------------------------------------------------------------------

--------------Pre processing over--------------1.176565
{'sum': ['partsupp.ps_availqty.0'], 'ps_supplycost': ['partsupp.ps_supplycost.0']}
----Obtained CAND lists----1.367501
----trying for depth 0----1.367531
-------Exploring Instance Tree-------1.395385
-------Update Star Centres-------1.395502
-------Obtained merge list-------1.395665
-------Obtained star set-------1.395682
-------Obtained merged stars-------1.396006
-------Initialized TID lists-------1.396029
-------Gen Lattice-------1.398478
SELECT * FROM  partsupp partsupp_0_1
--------------Post processing over--------------1.428853
Database connection established!
SELECT * FROM  partsupp partsupp_0_1
base cardinality
PreproBase.makeDataStruct_cardinality 5
PreproBase.makeDataStruct_attribute {4=PS_SUPPLYCOST, 3=PS_AVAILQTY, 2=PS_SUPPKEY, 1=PS_PARTKEY}
PreproBase.makeDataStruct_class {0=count, 1=java.lang.Integer, 2=java.lang.Integer, 3=java.lang.Integer, 4=java.math.BigDecimal}
__________Preprocessing base table 25.0 ms
select sum(ps_availqty),ps_supplycost  from partsupp where ps_availqty > 5000 and ps_supplycost < 700 group by ps_supplycost ;    
PreproBase.makeDataStruct_class_query {1=java.math.BigDecimal, 2=java.math.BigDecimal}
{1=java.lang.Integer, 2=java.math.BigDecimal}
PreproBase.result_cardinality 1
PreproBase.result_column {2=ps_supplycost, 1=sum(ps_availqty)}
PreproBase.result_class {1=java.lang.Integer, 2=java.math.BigDecimal}
MapBoth.pairs_{1=[3], 2=[4]}
MapBoth.produce_lattice_root_[[3, 4]]
__________Query output table cum Mapping table 10.0 ms
Used memory is megabytes: 7 MB
lattice_root [sum(ps_availqty), ps_supplycost]
BuildLattice.lattice_size 3 keyness_count 2
Keyness_[sum(ps_availqty), ps_supplycost]
Keyness_[sum(ps_availqty)]
Keyness_[ps_supplycost]
Containment_0.0 ms_[sum(ps_availqty), ps_supplycost]_true
Time_TD 2.0 Time_BU 0.0
Phase1.lattice_root {sum(ps_availqty)=3, ps_supplycost=4} num_candidates 3
[(sum(ps_availqty) ), (ps_supplycost ), (sum(ps_availqty) ps_supplycost )]
__________diff_grpby 6.0 ms
SingleConstraints.aggregation (1, {min=[3], avg=[3], max=[3], sum=[3]})
SingleConstraints.aggregation (2, {min=[4], avg=[4], max=[4], sum=[4]})
Grouping_[ps_supplycost]_aggreColumns_[1]
MapRID = {[378.49]={1=[8895]}}
combinaBID [4]
getBaseCols [1, 2, 3]
Read_partial_data_5.0_ms
Column_id_1 Aggregations_{min=[3], avg=[3], max=[3], sum=[3]}
Grouping_[sum(ps_availqty)]_aggreColumns_[2]
MapRID = {[8895]={2=[378.49]}}
combinaBID [3]
getBaseCols [1, 2, 4]
Read_partial_data_0.0_ms
Column_id_2 Aggregations_{min=[4], avg=[4], max=[4], sum=[4]}
Phase2.combnode [ps_supplycost] 
aggregation(list of pair) [(1, {avg=[3], sum=[3]})]
Phase2.combnode [sum(ps_availqty)] 
aggregation(list of pair) [(2, {min=[4], avg=[4], max=[4], sum=[4]})]
Phase2.treenode {sum(ps_availqty)=3, ps_supplycost=4}
Phase2.combnode [ps_supplycost]
aggregation 2 [{1=(avg, 3)}, {1=(sum, 3)}]
Phase2.combnode [sum(ps_availqty)]
aggregation 4 [{2=(min, 4)}, {2=(avg, 4)}, {2=(max, 4)}, {2=(sum, 4)}]
__________diff_aggre 1.0 ms
__________diff_granu 10.0 ms
FilterSelection_latticeRoot_{sum(ps_availqty)=3, ps_supplycost=4}
[4]
FilterSelection.grouping_(ps_supplycost )_multi-dimensions_[1, 2, 3]_aggregation-combinations_2
combnode = (ps_supplycost )
FilterSelection.matrix_[378.49]_boundingValues_{1=8895}
time1_0.0_time2_1.0_time3_0.0 = 1.0_ms
Start Experiment from One Dimensi
Created bounding box 1 (avg, 3)
Created bounding box 1 (sum, 3)
Created bounding box 1 (avg, 3)
Created bounding box 1 (sum, 3)
Created bounding box 1 (avg, 3)
Created bounding box 1 (sum, 3)
------------------------one dimension--------------------- 2.0_ms
2 (0, 0) (0, 4)
OneDimenFilter BaseIndex=2 (1, 1) (1, 5) [(avg, 3)]
3 (0, 0) (0, 4)
OneDimenFilter BaseIndex=3 (3325, 3325) (3325, 8895) [(sum, 3)]
1 (0, 0) (0, 1)
OneDimenFilter BaseIndex=1 (1, 1) (1, 2) [(sum, 3)]
3 (0, 0) (0, 4)
OneDimenFilter BaseIndex=3 (3325, 3325) (3325, 8895) [(avg, 3)]
2 (0, 0) (0, 4)
OneDimenFilter BaseIndex=2 (1, 1) (1, 5) [(sum, 3)]
1 (0, 0) (0, 1)
OneDimenFilter BaseIndex=1 (1, 1) (1, 2) [(avg, 3)]
time for one/two/three dimensi_2.0_ms
[3]
FilterSelection.grouping_(sum(ps_availqty) )_multi-dimensions_[1, 2, 4]_aggregation-combinations_4
combnode = (sum(ps_availqty) )
FilterSelection.matrix_[8895]_boundingValues_{2=378.49}
time1_0.0_time2_0.0_time3_0.0 = 0.0_ms
Start Experiment from One Dimensi
fill_matrix_cost_0.0_ms
Created bounding box 1 (min, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (avg, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (max, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (min, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (avg, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (max, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (min, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (avg, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (max, 4)
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 4)
------------------------one dimension--------------------- 2.0_ms
4 (0, 0) (0, 4)
OneDimenFilter BaseIndex=4 (337.09, 337.09) (337.09, 993.49) [(avg, 4)]
4 (0, 0) (0, 4)
OneDimenFilter BaseIndex=4 (337.09, 337.09) (337.09, 993.49) [(sum, 4)]
2 (0, 0) (0, 4)
OneDimenFilter BaseIndex=2 (1, 1) (1, 5) [(sum, 4)]
1 (0, 0) (0, 1)
OneDimenFilter BaseIndex=1 (1, 1) (1, 2) [(max, 4)]
4 (0, 0) (0, 4)
OneDimenFilter BaseIndex=4 (337.09, 337.09) (337.09, 993.49) [(max, 4)]
1 (0, 0) (0, 1)
OneDimenFilter BaseIndex=1 (1, 1) (1, 2) [(avg, 4)]
2 (0, 0) (0, 4)
OneDimenFilter BaseIndex=2 (1, 1) (1, 5) [(avg, 4)]
1 (0, 0) (0, 1)
OneDimenFilter BaseIndex=1 (1, 1) (1, 2) [(sum, 4)]
4 (0, 0) (0, 4)
OneDimenFilter BaseIndex=4 (337.09, 337.09) (337.09, 993.49) [(min, 4)]
2 (0, 0) (0, 4)
OneDimenFilter BaseIndex=2 (1, 1) (1, 5) [(min, 4)]
2 (0, 0) (0, 4)
OneDimenFilter BaseIndex=2 (1, 1) (1, 5) [(max, 4)]
1 (0, 0) (0, 1)
OneDimenFilter BaseIndex=1 (1, 1) (1, 2) [(min, 4)]
time for one/two/three dimensi_4.0_ms
__________diff_filter 10.0 ms
Used memory2 is megabytes: 4 MB

Obtained Queries 
---------------------------------------------------------------------------------------------------------------

select sum(ps_availqty),ps_supplycost 
from partsupp
where ps_availqty >= 3325 and ps_supplycost < 8895
group by ps_comment

select avg(ps_availqty),ps_supplycost 
from partsupp
where ps_availqty >= 3325 and ps_supplycost < 8895
group by ps_comment

select ps_availqty, avg(ps_supplycost)
from partsupp
where ps_supplycost >= 337.09 and ps_supplycost <= 993.49
group by ps_comment

select ps_availqty, min(ps_supplycost)
from partsupp
where ps_supplycost >= 337.09 and ps_supplycost <= 993.49
group by ps_comment

select ps_availqty, max(ps_supplycost)
from partsupp
where ps_supplycost >= 337.09 and ps_supplycost <= 993.49
group by ps_comment

select ps_availqty, sum(ps_supplycost)
from partsupp
where ps_supplycost >= 337.09 and ps_supplycost <= 993.49
group by ps_comment
