select l_tax, sum(l_quantity), sum(l_extendedprice) as count_order
from lineitem
where l_quantity > 15 and l_tax >= 0.04
group by l_tax;
--------------------------------------------------------------------------------------------------------

--------------Pre processing over--------------1.268233
{'l_tax': ['lineitem.l_tax.0']}
----Obtained CAND lists----1.442108
----trying for depth 0----1.442135
-------Exploring Instance Tree-------1.470198
-------Update Star Centres-------1.470279
-------Obtained merge list-------1.470381
-------Obtained star set-------1.470401
-------Obtained merged stars-------1.470542
-------Initialized TID lists-------1.470564
-------Gen Lattice-------1.472003
SELECT * FROM  lineitem lineitem_0
--------------Post processing over--------------1.498836
Database connection established!
SELECT * FROM  lineitem lineitem_0
base cardinality
PreproBase.makeDataStruct_cardinality 5
PreproBase.makeDataStruct_attribute {5=L_QUANTITY, 4=L_LINENUMBER, 3=L_SUPPKEY, 8=L_TAX, 2=L_PARTKEY, 7=L_DISCOUNT, 1=L_ORDERKEY, 6=L_EXTENDEDPRICE}
PreproBase.makeDataStruct_class {0=count, 1=java.lang.Integer, 2=java.lang.Integer, 3=java.lang.Integer, 4=java.lang.Integer, 5=java.math.BigDecimal, 6=java.math.BigDecimal, 7=java.math.BigDecimal, 8=java.math.BigDecimal}
__________Preprocessing base table 28.0 ms
select l_tax, sum(l_quantity), sum(l_extendedprice) as count_order from lineitem where l_quantity > 15 and l_tax >= 0.04 group by l_tax; 
PreproBase.makeDataStruct_class_query {1=java.math.BigDecimal, 2=java.math.BigDecimal, 3=java.math.BigDecimal}
{1=java.math.BigDecimal, 2=java.math.BigDecimal, 3=java.math.BigDecimal}
PreproBase.result_cardinality 2
PreproBase.result_column {3=count_order, 2=sum(l_quantity), 1=l_tax}
PreproBase.result_class {1=java.math.BigDecimal, 2=java.math.BigDecimal, 3=java.math.BigDecimal}
MapBoth.pairs_{1=[8]}
MapBoth.produce_lattice_root_[[8]]
__________Query output table cum Mapping table 9.0 ms
Used memory is megabytes: 7 MB
lattice_root [l_tax]
BuildLattice.lattice_size 1 keyness_count 1
Keyness_[l_tax]
Time_TD 1.0 Time_BU 0.0
Phase1.lattice_root {l_tax=8} num_candidates 1
[(l_tax )]
__________diff_grpby 5.0 ms
SingleConstraints.aggregation (2, {sum=[5]})
SingleConstraints.aggregation (3, {sum=[6]})
SingleConstraints.aggregation (1, {min=[8], avg=[8, 7], max=[8], sum=[7, 8]})
Grouping_[l_tax]_aggreColumns_[2, 3]
MapRID = {[0.06]={2=[64.00], 3=[74938.80]}, [0.04]={2=[24.00], 3=[22824.48]}}
combinaBID [8]
getBaseCols [1, 2, 3, 4, 5, 6, 7]
Read_partial_data_5.0_ms
Column_id_2 Aggregations_{sum=[5]}
Column_id_3 Aggregations_{sum=[6]}
Phase2.combnode [l_tax] 
aggregation(list of pair) [(2, {sum=[5]}), (3, {sum=[6]})]
Phase2.treenode {l_tax=8}
Phase2.combnode [l_tax]
aggregation 1 [{2=(sum, 5), 3=(sum, 6)}]
__________diff_aggre 1.0 ms
__________diff_granu 19.0 ms
FilterSelection_latticeRoot_{l_tax=8}
[8]
FilterSelection.grouping_(l_tax )_multi-dimensions_[1, 2, 3, 4, 5, 6, 7]_aggregation-combinations_1
combnode = (l_tax )
FilterSelection.matrix_[0.06]_boundingValues_{2=64.00, 3=74938.80}
FilterSelection.matrix_[0.04]_boundingValues_{2=24.00, 3=22824.48}
time1_0.0_time2_1.0_time3_0.0 = 1.0_ms
Start Experiment from One Dimensi
index_1_combination_[(sum, 5), (sum, 6)]_matrix_[0.04]
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 6)
Maximum bounding box_0 0
Function_sum::5
Time for grouping_[0.04] = 2.0_ms
index_1_combination_[(sum, 5), (sum, 6)]_matrix_[0.06]
Maximum bounding box_0 0
Function_sum::6
Maximum bounding box_0 0
Function_sum::5
Time for grouping_[0.06] = 1.0_ms
index_2_combination_[(sum, 5), (sum, 6)]_matrix_[0.04]
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 6)
Maximum bounding box_0 1
Function_sum::5
Time for grouping_[0.04] = 0.0_ms
index_2_combination_[(sum, 5), (sum, 6)]_matrix_[0.06]
Maximum bounding box_0 1
Function_sum::6
Maximum bounding box_0 1
Function_sum::5
Time for grouping_[0.06] = 0.0_ms
index_3_combination_[(sum, 5), (sum, 6)]_matrix_[0.04]
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 6)
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.04] = 0.0_ms
index_3_combination_[(sum, 5), (sum, 6)]_matrix_[0.06]
Maximum bounding box_0 4
Function_sum::6
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.06] = 0.0_ms
index_4_combination_[(sum, 5), (sum, 6)]_matrix_[0.04]
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 6)
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.04] = 1.0_ms
index_4_combination_[(sum, 5), (sum, 6)]_matrix_[0.06]
Maximum bounding box_0 4
Function_sum::6
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.06] = 0.0_ms
index_5_combination_[(sum, 5), (sum, 6)]_matrix_[0.04]
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 6)
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.04] = 0.0_ms
index_5_combination_[(sum, 5), (sum, 6)]_matrix_[0.06]
Maximum bounding box_0 4
Function_sum::6
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.06] = 0.0_ms
index_6_combination_[(sum, 5), (sum, 6)]_matrix_[0.04]
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 6)
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.04] = 0.0_ms
index_6_combination_[(sum, 5), (sum, 6)]_matrix_[0.06]
Maximum bounding box_0 4
Function_sum::6
Maximum bounding box_0 4
Function_sum::5
Time for grouping_[0.06] = 1.0_ms
index_7_combination_[(sum, 5), (sum, 6)]_matrix_[0.04]
fill_matrix_cost_0.0_ms
Created bounding box 1 (sum, 6)
Maximum bounding box_0 2
Function_sum::5
Time for grouping_[0.04] = 0.0_ms
index_7_combination_[(sum, 5), (sum, 6)]_matrix_[0.06]
Maximum bounding box_0 2
Function_sum::6
Maximum bounding box_0 2
Function_sum::5
Time for grouping_[0.06] = 1.0_ms
------------------------one dimension--------------------- 8.0_ms
5 (0, 0) (0, 4)
OneDimenFilter BaseIndex=5 (8.00, 8.00) (8.00, 36.00) [(sum, 5), (sum, 6)]
3 (0, 0) (0, 4)
OneDimenFilter BaseIndex=3 (1, 1) (1, 5) [(sum, 5), (sum, 6)]
1 (0, 0) (0, 0)
OneDimenFilter BaseIndex=1 (1, 1) (1, 1) [(sum, 5), (sum, 6)]
4 (0, 0) (0, 4)
OneDimenFilter BaseIndex=4 (1, 1) (1, 5) [(sum, 5), (sum, 6)]
2 (0, 0) (0, 1)
OneDimenFilter BaseIndex=2 (1, 1) (1, 2) [(sum, 5), (sum, 6)]
7 (0, 0) (0, 2)
OneDimenFilter BaseIndex=7 (0.04, 0.04) (0.04, 0.10) [(sum, 5), (sum, 6)]
6 (0, 0) (0, 4)
OneDimenFilter BaseIndex=6 (13309.60, 13309.60) (13309.60, 45983.16) [(sum, 5), (sum, 6)]
time for one/two/three dimensi_9.0_ms
__________diff_filter 12.0 ms
Used memory2 is megabytes: 4 MB

Obtained Queries 
---------------------------------------------------------------------------------------------------------------

select l_tax, sum(l_quantity), sum(l_extendedprice) as count_order
from lineitem
where l_quantity >= 8.00 and l_quantity <= 36.00
group by l_tax;

select l_tax, sum(l_quantity), sum(l_extendedprice) as count_order
from lineitem
where l_linenumber >= 1 and l_quantity <= 5
group by l_tax;

select l_tax, sum(l_quantity), sum(l_extendedprice) as count_order
from lineitem
where l_extendedprice >= 13309.60 and l_quantity <= 45983.16
group by l_tax;

